<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xgs.mapper.system.SysUserMapper">
  <resultMap id="BaseResultMap" type="cn.xgs.domain.dto.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phonenumber" jdbcType="VARCHAR" property="phonenumber" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    delete from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.xgs.domain.dto.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    insert into sys_user (user_id, user_name, nick_name, 
      email, phonenumber, sex, 
      password, status, del_flag, 
      login_ip, login_date, create_by, 
      create_time, update_by, update_time, 
      remark)
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{delFlag,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginDate,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.xgs.domain.dto.SysUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    select user_id, user_name, nick_name, email, phonenumber, sex, password, status, 
    del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark
    from sys_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    select user_id, user_name, nick_name, email, phonenumber, sex, password, status, 
    del_flag, login_ip, login_date, create_by, create_time, update_by, update_time, remark
    from sys_user
  </select>
  <sql id="selectUserVo">
    select u.user_id,
           u.user_name,
           u.nick_name,
           u.email,
           u.phonenumber,
           u.password,
           u.sex,
           u.status,
           u.del_flag,
           u.login_ip,
           u.login_date,
           u.create_by,
           u.create_time,
           u.remark,
           r.role_id,
           r.role_name,
           r.status as role_status
    from sys_user u
--            left join sys_dept d on u.dept_id = d.dept_id
           left join sys_user_role ur on u.user_id = ur.user_id
           left join sys_role r on r.role_id = ur.role_id
  </sql>

  <select id="selectUserList" parameterType="cn.xgs.domain.dto.SysUser" resultMap="BaseResultMap">
    select u.user_id, u.dept_id, u.company_id, u.nick_name, u.user_name, u.email, u.avatar, u.phonenumber, u.sex,
    u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name, d.leader,
    d.leader_id from
    sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    where u.del_flag = '0'
    <if test="userId != null and userId != 0">
      AND u.user_id = #{userId}
    </if>
    <if test="userName != null and userName != ''">
      AND u.user_name like concat('%', #{userName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND u.status = #{status}
    </if>
    <if test="phonenumber != null and phonenumber != ''">
      AND u.phonenumber like concat('%', #{phonenumber}, '%')
    </if>
    <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
      AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
    </if>
    <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
      AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
    </if>
    <if test="deptId != null and deptId != 0">
      AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId},
      ancestors) ))
    </if>
  </select>

  <select id="getIdByLikeNickName" resultType="java.util.Map">
    select user_id userId,nick_name nickName
    from sys_user
    where del_flag = 0
    <if test="nickName != '' and nickName != null">
      and nick_name like concat('%',#{nickName},'%')
    </if>
  </select>

  <select id="selectAllocatedList" parameterType="cn.xgs.domain.dto.SysUser" resultMap="BaseResultMap">
    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status,
    u.create_time
    from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    left join sys_user_role ur on u.user_id = ur.user_id
    left join sys_role r on r.role_id = ur.role_id
    where u.del_flag = '0' and r.role_id = #{roleId}
    <if test="userName != null and userName != ''">
      AND u.user_name like concat('%', #{userName}, '%')
    </if>
    <if test="phonenumber != null and phonenumber != ''">
      AND u.phonenumber like concat('%', #{phonenumber}, '%')
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectUnallocatedList" parameterType="cn.xgs.domain.dto.SysUser" resultMap="BaseResultMap">
    select distinct u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status,
    u.create_time
    from sys_user u
    left join sys_dept d on u.dept_id = d.dept_id
    left join sys_user_role ur on u.user_id = ur.user_id
    left join sys_role r on r.role_id = ur.role_id
    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and
    ur.role_id = #{roleId})
    <if test="userName != null and userName != ''">
      AND u.user_name like concat('%', #{userName}, '%')
    </if>
    <if test="phonenumber != null and phonenumber != ''">
      AND u.phonenumber like concat('%', #{phonenumber}, '%')
    </if>
    <!-- 数据范围过滤 -->
    ${params.dataScope}
  </select>

  <select id="selectUserByUserName" parameterType="String" resultMap="BaseResultMap">
    <include refid="selectUserVo"/>
    where u.user_name = #{userName} and u.del_flag = '0'
  </select>

  <select id="selectUserById" parameterType="Long" resultMap="BaseResultMap">
    <include refid="selectUserVo"/>
    where u.user_id = #{userId}
  </select>

  <select id="checkUserNameUnique" parameterType="String" resultMap="BaseResultMap">
    select user_id, user_name
    from sys_user
    where user_name = #{userName}
      and del_flag = '0'
      limit 1
  </select>

  <select id="checkPhoneUnique" parameterType="String" resultMap="BaseResultMap">
    select user_id, phonenumber
    from sys_user
    where phonenumber = #{phonenumber}
      and del_flag = '0'
      limit 1
  </select>

  <select id="checkEmailUnique" parameterType="String" resultMap="BaseResultMap">
    select user_id, email
    from sys_user
    where email = #{email}
      and del_flag = '0'
      limit 1
  </select>

  <insert id="insertUser" parameterType="cn.xgs.domain.dto.SysUser" useGeneratedKeys="true" keyProperty="userId">
    insert into sys_user(
    <if test="userId != null and userId != 0">user_id,</if>
    <if test="deptId != null and deptId != 0">dept_id,</if>
    <if test="companyId != null">company_id,</if>
    <if test="userName != null and userName != ''">user_name,</if>
    <if test="nickName != null and nickName != ''">nick_name,</if>
    <if test="email != null and email != ''">email,</if>
    <if test="avatar != null and avatar != ''">avatar,</if>
    <if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
    <if test="sex != null and sex != ''">sex,</if>
    <if test="password != null and password != ''">password,</if>
    <if test="status != null and status != ''">status,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    <if test="remark != null and remark != ''">remark,</if>
    create_time
    )values(
    <if test="userId != null and userId != ''">#{userId},</if>
    <if test="deptId != null and deptId != 0">#{deptId},</if>
    <if test="companyId != null">#{companyId},</if>
    <if test="userName != null and userName != ''">#{userName},</if>
    <if test="nickName != null and nickName != ''">#{nickName},</if>
    <if test="email != null and email != ''">#{email},</if>
    <if test="avatar != null and avatar != ''">#{avatar},</if>
    <if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
    <if test="sex != null and sex != ''">#{sex},</if>
    <if test="password != null and password != ''">#{password},</if>
    <if test="status != null and status != ''">#{status},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    sysdate()
    )
  </insert>

  <update id="updateUser" parameterType="cn.xgs.domain.dto.SysUser">
    update sys_user
    <set>
      <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
      <if test="companyId != null">company_id = #{companyId},</if>
      <if test="companyId == null">company_id = null,</if>
      <if test="userName != null and userName != ''">user_name = #{userName},</if>
      <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
      <if test="acctId != null and acctId != ''">acct_id= #{acctId},</if>
      <if test="email != null ">email = #{email},</if>
      <if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
      <if test="sex != null and sex != ''">sex = #{sex},</if>
      <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
      <if test="password != null and password != ''">password = #{password},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
      <if test="loginDate != null">login_date = #{loginDate},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      <if test="remark != null">remark = #{remark},</if>
      update_time = sysdate()
    </set>
    where user_id = #{userId}
  </update>

  <update id="updateUserProfile" parameterType="cn.xgs.domain.dto.SysUser">
    update sys_user
    <set>
      <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
      <if test="companyId != null">company_id = #{companyId},</if>
      <if test="userName != null and userName != ''">user_name = #{userName},</if>
      <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
      <if test="acctId != null and acctId != ''">acct_id= #{acctId},</if>
      <if test="email != null ">email = #{email},</if>
      <if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
      <if test="sex != null and sex != ''">sex = #{sex},</if>
      <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
      <if test="password != null and password != ''">password = #{password},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
      <if test="loginDate != null">login_date = #{loginDate},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      <if test="remark != null">remark = #{remark},</if>
      update_time = sysdate()
    </set>
    where user_id = #{userId}
  </update>

  <update id="updateUserStatus" parameterType="cn.xgs.domain.dto.SysUser">
    update sys_user
    set status = #{status}
    where user_id = #{userId}
  </update>

  <delete id="deleteUserByIds" parameterType="Long">
    update sys_user set del_flag = '2' where user_id in
    <foreach collection="array" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>
</mapper>