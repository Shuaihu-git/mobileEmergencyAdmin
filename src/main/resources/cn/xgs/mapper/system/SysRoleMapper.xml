<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xgs.mapper.system.SysRoleMapper">
  <resultMap id="BaseResultMap" type="cn.xgs.domain.dto.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    delete from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.xgs.domain.dto.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    insert into sys_role (role_id, role_name, status, 
      del_flag, create_by, create_time, 
      update_by, update_time, remark
      )
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.xgs.domain.dto.SysRole">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    select role_id, role_name, status, del_flag, create_by, create_time, update_by, update_time, 
    remark
    from sys_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 18 22:51:36 CST 2024.
    -->
    select role_id, role_name, status, del_flag, create_by, create_time, update_by, update_time, 
    remark
    from sys_role
  </select>
  <sql id="selectRoleVo">
    select distinct r.role_id, r.parent_id, r.ancestors, r.role_name, r.exchange_rate, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.dept_check_strictly,
                    r.status, r.del_flag, r.create_time, r.remark
    from sys_role r
           left join sys_user_role ur on ur.role_id = r.role_id
           left join sys_user u on u.user_id = ur.user_id
           left join sys_dept d on u.dept_id = d.dept_id
  </sql>

  <insert id="insertRole" parameterType="cn.xgs.domain.dto.SysRole" useGeneratedKeys="true" keyProperty="roleId">
    insert into sys_role(
    <if test="roleId != null and roleId != 0">role_id,</if>
    <if test="parentId != null">parent_id,</if>
    <if test="ancestors != null and ancestors != ''">ancestors,</if>
    <if test="roleName != null and roleName != ''">role_name,</if>
    <if test="exchangeRate != null">exchange_rate,</if>
    <if test="roleKey != null and roleKey != ''">role_key,</if>
    <if test="roleSort != null">role_sort,</if>
    <if test="dataScope != null and dataScope != ''">data_scope,</if>
    <if test="menuCheckStrictly != null">menu_check_strictly,</if>
    <if test="deptCheckStrictly != null">dept_check_strictly,</if>
    <if test="status != null and status != ''">status,</if>
    <if test="remark != null and remark != ''">remark,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    create_time
    )values(
    <if test="roleId != null and roleId != 0">#{roleId},</if>
    <if test="parentId != null">#{parentId},</if>
    <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
    <if test="roleName != null and roleName != ''">#{roleName},</if>
    <if test="exchangeRate != null">#{exchangeRate},</if>
    <if test="roleKey != null and roleKey != ''">#{roleKey},</if>
    <if test="roleSort != null">#{roleSort},</if>
    <if test="dataScope != null and dataScope != ''">#{dataScope},</if>
    <if test="menuCheckStrictly != null">#{menuCheckStrictly},</if>
    <if test="deptCheckStrictly != null">#{deptCheckStrictly},</if>
    <if test="status != null and status != ''">#{status},</if>
    <if test="remark != null and remark != ''">#{remark},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    sysdate()
    )
  </insert>






  <select id="selectRoleList" parameterType="cn.xgs.domain.dto.SysRole" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.del_flag = '0'
    <if test="roleIds != null">
      AND r.role_id IN
      <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
        #{roleId}
      </foreach>
    </if>
    <if test="parentId != null and parentId != 0">
      AND r.parent_id = #{parentId}
    </if>
    <if test="roleName != null and roleName != ''">
      AND r.role_name like concat('%', #{roleName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND r.status = #{status}
    </if>
    <if test="roleKey != null and roleKey != ''">
      AND r.role_key like concat('%', #{roleKey}, '%')
    </if>
    <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
      and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
    </if>
    <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
      and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
    </if>
    order by r.parent_id,r.role_sort
  </select>

  <select id="selectRolePermissionByUserId" parameterType="Long" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    WHERE r.del_flag = '0' and ur.user_id = #{userId}
  </select>

  <select id="selectRoleById" parameterType="Long" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.role_id = #{roleId}
  </select>

  <select id="selectRoleByRoleKey" parameterType="String" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.role_key = #{roleKey}
  </select>

  <select id="checkRoleNameUnique" parameterType="String" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.role_name=#{roleName} and r.del_flag = '0' limit 1
  </select>

  <select id="checkRoleKeyUnique" parameterType="String" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.role_key=#{roleKey} and r.del_flag = '0' limit 1
  </select>

  <update id="updateRole" parameterType="cn.xgs.domain.dto.SysRole">
    update sys_role
    <set>
      <if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
      <if test="parentId != null">parent_id = #{parentId},</if>
      <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
      <if test="exchangeRate != null">exchange_rate = #{exchangeRate},</if>
      <if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
      <if test="roleSort != null">role_sort = #{roleSort},</if>
      <if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
      <if test="menuCheckStrictly != null">menu_check_strictly = #{menuCheckStrictly},</if>
      <if test="deptCheckStrictly != null">dept_check_strictly = #{deptCheckStrictly},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="remark != null">remark = #{remark},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where role_id = #{roleId}
  </update>

  <delete id="deleteRoleByIds" parameterType="Long">
    update sys_role set del_flag = '2' where role_id in
    <foreach collection="array" item="roleId" open="(" separator="," close=")">
      #{roleId}
    </foreach>
  </delete>

  <select id="selectRoleIdByRoleKey" parameterType="String" resultType="long">
    select r.role_id from sys_role r
    where r.role_key=#{roleKey} and r.del_flag = '0' limit 1
  </select>

  <select id="selectRoleListOfEnable" parameterType="cn.xgs.domain.dto.SysRole" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.del_flag = '0'
    <if test="roleId != null and roleId != 0">
      AND r.role_id = #{roleId}
    </if>
    <if test="parentId != null and parentId != 0">
      AND r.parent_id = #{parentId}
    </if>
    <if test="roleName != null and roleName != ''">
      AND r.role_name like concat('%', #{roleName}, '%')
    </if>
    <if test="roleKey != null and roleKey != ''">
      AND r.role_key like concat('%', #{roleKey}, '%')
    </if>
    order by r.parent_id,r.role_sort
  </select>

  <select id="selectNormalChildrenRoleById" resultType="java.lang.Integer">
    select count(*) from sys_role where status = 0 and del_flag = '0' and find_in_set(#{roleId}, ancestors)
  </select>

  <select id="hasChildByRoleId" resultType="java.lang.Integer">
    select count(1) from sys_role
    where del_flag = '0' and parent_id = #{roleId} limit 1
  </select>

  <select id="selectRoleIdsByParentId" resultType="java.lang.String">
    SELECT role_id FROM sys_role WHERE FIND_IN_SET(#{parentId},ancestors) or role_id = #{parentId}
  </select>

  <select id="selectChildrenRoleById" parameterType="Long" resultMap="BaseResultMap">
    select r.role_id,
           r.parent_id,
           r.ancestors,
           r.role_name,
           r.exchange_rate,
           r.role_key,
           r.role_sort,
           r.data_scope,
           r.menu_check_strictly,
           r.dept_check_strictly,
           r.status,
           r.del_flag,
           r.create_time,
           r.remark
    from sys_role r
    where find_in_set(#{roleId}, ancestors)
      and r.del_flag = 0
  </select>

  <update id="updateRoleChildren"  parameterType="java.util.List">
    update sys_role set ancestors =
    <foreach collection="roles" item="item" index="index"
             separator=" " open="case role_id" close="end">
      when #{item.roleId} then #{item.ancestors}
    </foreach>
    where role_id in
    <foreach collection="roles" item="item" index="index"
             separator="," open="(" close=")">
      #{item.roleId}
    </foreach>
  </update>

  <update id="updateRoleStatusNormal" parameterType="Long">
    update sys_role set status = '0' where role_id in
    <foreach collection="array" item="roleId" open="(" separator="," close=")">
      #{roleId}
    </foreach>
  </update>
</mapper>